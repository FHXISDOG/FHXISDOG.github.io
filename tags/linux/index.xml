<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on FHXISDOG</title>
    <link>https://fhxisdog.github.io/tags/linux/</link>
    <description>Recent content in linux on FHXISDOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2019. All rights reserved.</copyright>
    <lastBuildDate>Sun, 15 Sep 2019 05:05:24 +0800</lastBuildDate>
    
	<atom:link href="https://fhxisdog.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Emacs搭建python开发环境</title>
      <link>https://fhxisdog.github.io/posts/emacs%E6%90%AD%E5%BB%BApython%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Sun, 15 Sep 2019 05:05:24 +0800</pubDate>
      
      <guid>https://fhxisdog.github.io/posts/emacs%E6%90%AD%E5%BB%BApython%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
      <description>安装python必须的依赖 sudo pip install jedi elpy rope pylint
emacs配置 在～/.emacs.d/路径新建文件init.el
添加以下配置:
(require &#39;package) (package-initialize) ;;配置包管理列表的源 (setq package-archives &#39;((&amp;quot;gnu&amp;quot; . &amp;quot;http://elpa.emacs-china.org/gnu/&amp;quot;) (&amp;quot;melpa&amp;quot; . &amp;quot;https://stable.melpa.org/packages/&amp;quot;))) (require &#39;cl) (defvar my/packages &#39;( company better-deafults material-theme elpy company-jedi switch-window projectile neotree ) ) ;;jedi配置 (setq jedi:setup-keys t) (setq jedi:complete-on-dot t) (setq elpy-rpc-backend &amp;quot;jedi&amp;quot;) (when (fboundp &#39;jedi:setup) (jedi:setup)) ;; 自动补全 (global-company-mode t) (add-hook &#39;after-init-hook &#39;global-company-mode) ;; 使用material主题 (load-theme &#39;material t) ;; enable python插件 (elpy-enable) ;;设置切换窗口为a-z (setq switch-window-shortcut-style &#39;qwerty) (global-set-key (kbd &amp;quot;C-x o&amp;quot;) &#39;switch-window) ;;projectilep配置 (projectile-mode +1) (define-key projectile-mode-map (kbd &amp;quot;C-c p&amp;quot;) &#39;projectile-command-map) ;;neotree配置 (setq neo-smart-open t) (setq projectile-switch-project-action &#39;neotree-projectile-action) (defun neotree-project-dir () &amp;quot;Open NeoTree using the git root.</description>
    </item>
    
    <item>
      <title>Emacs快捷键</title>
      <link>https://fhxisdog.github.io/posts/emacs%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Sat, 14 Sep 2019 16:44:17 +0800</pubDate>
      
      <guid>https://fhxisdog.github.io/posts/emacs%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description> 含义 C -&amp;gt; CTRL
M -&amp;gt; ALT
S-&amp;gt;SHIFT
基本命令  快捷键 含义 快捷键 含义    C-x C-f 打开文件 C-x C-c 关闭emacs   C-x C-s 保存文件 C-x C-w 当前缓冲区另存为   C-g 取消命令 C-x C-b 打开缓冲区列表   C-x b  打开一个缓冲区 C-x k 关闭当前缓冲区   C-x C-v 关闭当前缓冲区并打开新的文件    移动命令  快捷键 含义 快捷键 含义    C-n 向下移动一行 C-p 向上移动一行   C-f 向前移动一个字符 C-b 向后移动一个字符   C-a 移动到行首 C-e 移动到行尾   M-b 向后移动一个单词 M-f 向前移动一个单词   M-v 向上移动半屏 C-v 向下移动半屏   M-&amp;gt; 到文件末尾 M-&amp;lt; 到文件开头   M-g M-g  跳到xx行    窗口命令  快捷键 含义 快捷键 含义    C-x 2 水平分割窗口 C-x 3 垂直分割窗口   C-x 0 关闭当前窗口 C-x 1 关闭其他窗口   C-x 4 f  新tab打开文件 C-x 5 f   新窗口打开文件   C-x o   切换窗口 C-x 5 2  新建窗口   C-M-V 向下滚动其他窗口 C-M-S-V 向上滚动窗口    编辑命令  快捷键 含义 快捷键 含义    C-space 开始设置标记 C-@ 开始设置标记   M-w 复制标记内容 C-w 剪切选中内容   M-d 删除后面一个单词 C-d 删除后面一个字符   C-y 粘贴 C-k 删除一行   M-u 后面一个单词变成大写 M-l 后一个单词变成小写   M-c 后面一个单词首字母大写    替换命令  快捷键 含义 快捷键 含义    C-s 向下搜索 C-r 向上搜索   M-% 替换    文件夹命令  快捷键 含义 快捷键 含义    C-s d 打开文件夹列表 n 向下移动   p 向上移动 v 编辑光标所在文件   d 标记为删除 D 马上删除   x 执行标记 C 拷贝当前文件   R 重命名 &amp;#43; 新建文件夹   z 压缩文件 ！ 对光标所在文件执行shell命令   q 退出    </description>
    </item>
    
    <item>
      <title>Manjaro安装displaylink</title>
      <link>https://fhxisdog.github.io/posts/manjaro%E5%AE%89%E8%A3%85displaylink/</link>
      <pubDate>Mon, 24 Jun 2019 13:06:10 +0800</pubDate>
      
      <guid>https://fhxisdog.github.io/posts/manjaro%E5%AE%89%E8%A3%85displaylink/</guid>
      <description>使用华硕的便携笔记本需要安装displaylink驱动，官方又只提供windows驱动，在manjaro上使用需要自己安装驱动，经过研究，安装方法如下: 准备工作  uname -r查看内核版本,输出:4.19.23-1-MANJARO,说明我的内核版本是419,执行pacman -Ss linux-headers查看库中的依赖，执行sudo pacman -S core/liux419-headers安装头文件 安装evdi:yay -S evdi-git 3 安装displaylink yay -S displaylink  开始配置  装载evdi: sudo modprobe evdi 装载udl: sudo modprobe udl 启用displaylink.sevice: systemctl enable display link 开启displaylink.service:systemctl start displaylink 新增配置文件
/usr/share/X11/xorg.conf.d/20-evdidevice.conf --- Section &amp;quot;OutputClass&amp;quot; Identifier &amp;quot;DisplayLink&amp;quot; MatchDriver &amp;quot;evdi&amp;quot; Driver &amp;quot;modesetting&amp;quot; Option &amp;quot;AccelMethod&amp;quot; &amp;quot;none&amp;quot; EndSection  执行xandr --listproviders,可以看到输出:
Providers: number : 2 Provider 0: id: 0x45 cap: 0xb, Source Output, Sink Output, Sink Offload crtcs: 4 outputs: 2 associated providers: 1 name:Intel Provider 1: id: 0x14d cap: 0x2, Sink Output crtcs: 1 outputs: 1 associated providers: 1 name:modesetting  lxrandr开启屏幕</description>
    </item>
    
    <item>
      <title>Manjaro I3wm接入外接显示器不显示</title>
      <link>https://fhxisdog.github.io/posts/manjaro-i3wm%E6%8E%A5%E5%85%A5%E5%A4%96%E6%8E%A5%E6%98%BE%E7%A4%BA%E5%99%A8%E4%B8%8D%E6%98%BE%E7%A4%BA/</link>
      <pubDate>Wed, 29 May 2019 11:59:08 +0800</pubDate>
      
      <guid>https://fhxisdog.github.io/posts/manjaro-i3wm%E6%8E%A5%E5%85%A5%E5%A4%96%E6%8E%A5%E6%98%BE%E7%A4%BA%E5%99%A8%E4%B8%8D%E6%98%BE%E7%A4%BA/</guid>
      <description>装了manjaro的i3wm桌面环境后，发现外界显示器无法显示。搜索资料后发现解决方法如下。
查看设备输入 终端输入:
xrandr  可以看到结果如下，其中 eDP1是我笔记本自带的屏幕，HDMI1就是我外接的显示器。
Screen 0: minimum 8 x 8, current 1920 x 1080, maximum 32767 x 32767 eDP1 connected primary 1920x1080+0+0 (normal left inverted right x axis y axis) 310mm x 170mm 1920x1080 60.05*+ 59.93 1680x1050 59.88 1400x1050 59.98 1600x900 60.00 59.95 59.82 1280x1024 60.02 1400x900 59.96 59.88 1280x960 60.00 1368x768 60.00 59.88 59.85 1280x800 59.81 59.91 1280x720 59.86 60.00 59.74 1024x768 60.00 1024x576 60.00 59.</description>
    </item>
    
    <item>
      <title>Linux使用modmap替换super和CapsLock位置</title>
      <link>https://fhxisdog.github.io/posts/linux%E4%BD%BF%E7%94%A8modmap%E6%9B%BF%E6%8D%A2super%E5%92%8Ccapslock%E4%BD%8D%E7%BD%AE/</link>
      <pubDate>Tue, 28 May 2019 15:50:39 +0800</pubDate>
      
      <guid>https://fhxisdog.github.io/posts/linux%E4%BD%BF%E7%94%A8modmap%E6%9B%BF%E6%8D%A2super%E5%92%8Ccapslock%E4%BD%8D%E7%BD%AE/</guid>
      <description>manjaro的i3wm版本默认的mod键是super(就是windows键)，为了拯救我的小拇指，所以使用xmodmap将super键和CapsLock互换位置。
创建自己的映射表 xmodmap -pke &amp;gt; ~/.Xmodmap  创建映射 编辑～/.Xmodmap,在底部加入:
remove Lock = Caps_Lock remove Mod4 = Super_L keysym Super_L = Caps_Lock keysym Caps_Lock = Super_L add Lock = Caps_Lock add Mod4 = Super_L  测试: xmodmap ~/.Xmodmap  设置开机启动: 默认系统读取的就是$HOME/.Xmodmap
参考连接 arch-wiki
https://www.linuxidc.com/Linux/2013-05/84542.htm</description>
    </item>
    
    <item>
      <title>Smb无法连接windows共享文件夹</title>
      <link>https://fhxisdog.github.io/posts/smb%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5windows%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/</link>
      <pubDate>Tue, 28 May 2019 13:05:29 +0800</pubDate>
      
      <guid>https://fhxisdog.github.io/posts/smb%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5windows%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/</guid>
      <description>问题描述 使用pacmanfm在地址栏输入:smb://fhxisdog-win/temp访问windows共享文件夹，提示NO FILE OR DIRECTIONARY
在命令行使用命令:smbclient -L fhxisdog-win -U% 提示:NT_STATUS_ACCESS_DENIED
使用:smbclient -L fhxisdog-win -m SMB2可以访问
解决方法 编辑 /etc/samba/smb.conf:在[gloabl]下加入:
min protocOl = SMB2 max protocol = SMB2 client min protocol = SMB2 client max protocol = SMB2  smb简介  服务器消息块（Server Message Block，缩写为SMB），又称网络文件共享系统（Common Internet File System，缩写为CIFS, /ˈsɪfs/），一种应用层网络传输协议，由微软开发，主要功能是使网络上的机器能够共享计算机文件、打印机、串行端口和通讯等资源。它也提供经认证的行程间通信机能。它主要用在装有Microsoft Windows的机器上，在这样的机器上被称为Microsoft Windows Network。
经过Unix服务器厂商重新开发后，它可以用于连接Unix服务器和Windows客户机，执行打印和文件共享等任务。
与功能类似的网络文件系统（NFS）相比，NFS的消息格式是固定长度，而CIFS的消息格式大多数是可变长度，这增加了协议的复杂性。CIFS消息一般使用NetBIOS或TCP协议发送，分别使用不同的端口139或445，当前倾向于使用445端口。CIFS的消息包括一个信头（32字节）和消息体（1个或多个，可变长）。
 参考连接:wiki</description>
    </item>
    
    <item>
      <title>Shadowsocks-libev&#43;privoxy&#43;gfwlist2privoxy</title>
      <link>https://fhxisdog.github.io/posts/shadowsocks-libev&#43;privoxy/</link>
      <pubDate>Tue, 28 May 2019 12:01:14 +0800</pubDate>
      
      <guid>https://fhxisdog.github.io/posts/shadowsocks-libev&#43;privoxy/</guid>
      <description>本文所用到的工具  shadowsocks-libev privoxy gfwlist2privoxy  shadowsocks-libev安装配置 下载安装:sudo pacman -S shadowsocks-libev
配置:
 在/etc/shadowsocks/下新建config.json文件 编辑config.json：
{ &amp;quot;server&amp;quot;:&amp;quot;xxxxxx&amp;quot;, #服务器IP &amp;quot;server_port&amp;quot;:xxx, #服务器端口 &amp;quot;local_address&amp;quot;:&amp;quot;127.0.0.1&amp;quot;, #本地监听IP &amp;quot;local_port&amp;quot;:1080, #本地监听端口 &amp;quot;password&amp;quot;:&amp;quot;xxx&amp;quot;, #密码 &amp;quot;method&amp;quot;:&amp;quot;xxx&amp;quot;, #加密方式 &amp;quot;fast_open&amp;quot;:false, # tcp_fastopen &amp;quot;timeout&amp;quot;:1000, #超时时间 &amp;quot;workers&amp;quot;:1 #workder进程数 }  启动ss-local: ss-local -c /etc/shadowsocks/config.json
 测试:curl -x socks5://127.0.0.1:1080 http://www.google.com
 设置守护进程启动:systemctl start shadowsocks-libev@config ** 注意：这里@config是指 /etc/shadowsocks/下面的配置文件 **
 设置开机自启动: systemctl enable shadows-libev@config
privoxy+gfwlist2privoxy安装配置 下载privoxy：sudo pacman -S privoxy
  获取 gfwlist2privoxy 脚本:curl -skL https://raw.</description>
    </item>
    
  </channel>
</rss>