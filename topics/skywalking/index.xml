<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>skywalking on FHXISDOG</title>
    <link>https://fhxisdog.github.io/topics/skywalking/</link>
    <description>Recent content in skywalking on FHXISDOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2019. All rights reserved.</copyright>
    <lastBuildDate>Wed, 29 May 2019 15:33:57 +0800</lastBuildDate>
    
	<atom:link href="https://fhxisdog.github.io/topics/skywalking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>skywalking使用指南</title>
      <link>https://fhxisdog.github.io/posts/skywalking%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Wed, 29 May 2019 15:33:57 +0800</pubDate>
      
      <guid>https://fhxisdog.github.io/posts/skywalking%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>运行 单机运行  下载最新release包 解压，sh ${skywalkingpath}/bin/startup.sh 在springboot启动命令前加入启动参数
-javaagent:${path}/skywalking-agent.jar #path为skywalking解压的agent目录  访问localhost:8080查看结果
  docker 运行 前置条件 下载 下载最新release包并解压
构建docker bridge dcoker network create skywalking  使用数据库 ElasticSearch 启动es docker run -p 9200:9200 -p 9300:9300 -e &amp;quot;discovery.type=single-node&amp;quot; docker.elastic.co/elasticsearch/elasticsearch:6.4.3 #skywalking目前只支持6.x(6.1.0版本)  初始化数据库 编辑 ${path}/apache-skywalking-bin/config/appliccation.yml
storage: #elasticsearch: nameSpace: ${SW_NAMESPACE:&amp;quot;&amp;quot;} clusterNodes: ${SW_STORAGE_ES_CLUSTER_NODES:dev.iotechina.com:9201} #user: ${SW_ES_USER:&amp;quot;&amp;quot;} #password: ${SW_ES_PASSWORD:&amp;quot;&amp;quot;} indexShardsNumber: ${SW_STORAGE_ES_INDEX_SHARDS_NUMBER:2} indexReplicasNumber: ${SW_STORAGE_ES_INDEX_REPLICAS_NUMBER:0} #Batch process setting, refer to https://www.elastic.co/guide/en/elasticsearch/client/java-api/5.5/java-docs-bulk-processor.html bulkActions: ${SW_STORAGE_ES_BULK_ACTIONS:2000} # Execute the bulk every 2000 requests bulkSize: ${SW_STORAGE_ES_BULK_SIZE:20} # flush the bulk every 20mb flushInterval: ${SW_STORAGE_ES_FLUSH_INTERVAL:10} # flush the bulk every 10 seconds whatever the number of requests concurrentRequests: ${SW_STORAGE_ES_CONCURRENT_REQUESTS:2} # the number of concurrent requests metadataQueryMaxSize: ${SW_STORAGE_ES_QUERY_MAX_SIZE:5000} segmentQueryMaxSize: ${SW_STORAGE_ES_QUERY_SEGMENT_SIZE:200}  执行</description>
    </item>
    
  </channel>
</rss>